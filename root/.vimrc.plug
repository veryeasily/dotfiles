" vi: ft=vim
call plug#begin('~/.vim/plugged')

let g:tern_map_keys=1
let g:tern_map_prefix='<space>'
let g:tern_request_timeout = 2
let g:tern_show_argument_hints="on_move"

Plug 'tpope/vim-fugitive'

Plug 'mattn/webapi-vim' " Required by gist-vim
Plug 'mattn/gist-vim'

Plug 'editorconfig/editorconfig-vim'

" Make sure you use single quotes
Plug 'junegunn/fzf', { 'dir': $HOME . '/.fzf', 'do': 'yes \| ./install --all' }
Plug 'junegunn/fzf.vim'
Plug 'junegunn/vim-peekaboo'
Plug 'junegunn/vim-easy-align'
vmap <Enter> <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

Plug 'pbogut/fzf-mru.vim'

let g:ackprg = 'rg --vimgrep --hidden'
Plug 'mileszs/ack.vim'

" Syntax highlighting
let g:jsx_ext_required = 1
Plug 'sheerun/vim-polyglot'
Plug 'vito-c/jq.vim'

let g:rooter_use_lcd = 1
" Next line prevents vim-rooter from echoing whenever it changes directory.
let g:rooter_silent_chdir = 1

Plug 'airblade/vim-rooter'

Plug 'ap/vim-css-color'

" TPope stuff
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-rbenv'
Plug 'tpope/vim-speeddating'
Plug 'tpope/vim-surround'

" Assorted
let g:tmux_navigator_no_mappings = 1
nnoremap <silent> h :TmuxNavigateLeft<cr>
nnoremap <silent> j :TmuxNavigateDown<cr>
nnoremap <silent> k :TmuxNavigateUp<cr>
nnoremap <silent> l :TmuxNavigateRight<cr>
nnoremap <silent> \ :TmuxNavigatePrevious<cr>
Plug 'christoomey/vim-tmux-navigator'
Plug 'easymotion/vim-easymotion'

Plug 'Kuniwak/vint'
Plug 'mattn/emmet-vim'
Plug 'moll/vim-node'
Plug 'othree/html5.vim'

Plug 'scrooloose/nerdcommenter'

" Colorschemes
Plug 'flazz/vim-colorschemes'
Plug 'jacoborus/tender.vim'
Plug 'rakr/vim-one'
let g:gruvbox_contrast_light="hard"
Plug 'morhetz/gruvbox'

Plug 'ternjs/tern_for_vim', { 'do': 'npm install', 'for': ['javascript', 'javascript.jsx'] }
Plug 'SpaceVim/gtags.vim'

if has('python3')
  " Plug 'ludovicchabant/vim-gutentags'
end

Plug 'sheerun/vim-polyglot'
Plug 'ekalinin/Dockerfile.vim'
Plug 'mxw/vim-jsx'
Plug 'pearofducks/ansible-vim'

" Test framework for vimscripts. See https://github.com/junegunn/vader.vim
Plug 'junegunn/vader.vim'

if v:version >= 800

  let g:airline#extensions#ale#enabled = 0
  let g:ale_enabled = 1
  let g:ale_lint_delay = 2000
  let g:ale_set_quickfix = 0

  map <Leader>ad <Plug>(ale_detail)
  map <Leader>an <Plug>(ale_next)
  map <Leader>ap <Plug>(ale_previous)

  Plug 'SirVer/ultisnips'
  Plug 'honza/vim-snippets'
  Plug 'maralla/completor.vim', { 'do': 'make js' }
  Plug 'shawncplus/phpcomplete.vim'
  let g:completor_php_omni_trigger = '\$?\w+|\$?\w+\s+=\s+\w+'
  Plug 'w0rp/ale'

endif

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" neovim specific
if has('nvim')
  Plug 'w0rp/ale'
  

  set completeopt=menuone,noselect,preview

  Plug 'roxma/nvim-completion-manager'
  Plug 'roxma/nvim-cm-tern',  {'do': 'npm install'}
  Plug 'roxma/ncm-flow'
  Plug 'roxma/ncm-github'

  " There used to be tons of deoplete, tern, and supertab stuff here! Check the
  " git history for more info!
endif

Plug 'haya14busa/incsearch.vim'
Plug 'osyo-manga/vim-over'

call plug#end()

let g:CommandTFileScanner = 'git'

let g:EasyClipShareYanks = 1
map <Nul> <Plug>(easymotion-prefix)
map <Leader>s <Plug>(easymotion-s)

let g:user_emmet_mode='inv'
let g:user_emmet_install_global = 0
let g:user_emmet_leader_key='<C-p>'

" Macro manager
let g:marvim_find_key = '<leader>m'
let g:marvim_find_key = '<leader>M'

autocmd FileType html,css,javascript.jsx,typescript.tsx EmmetInstall
autocmd FileType html,css,eruby EmmetInstall

" All the NERDTree stuff used to be here on opening when vim just opens a
" folder. Check the git history for more info!

function! s:fzf_statusline()
  " Override statusline as you like
  highlight fzf1 ctermfg=161 ctermbg=251
  highlight fzf2 ctermfg=23 ctermbg=251
  highlight fzf3 ctermfg=237 ctermbg=251
  setlocal statusline=%#fzf1#\ >\ %#fzf2#fz%#fzf3#f
endfunction

autocmd! User FzfStatusLine call <SID>fzf_statusline()

if has('termguicolors')
  set termguicolors

  """
  " COLORS
  " set Vim-specific sequences for RGB colors
  " Borrowed from https://github.com/vim/vim/issues/993

  silent! let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  silent! let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
endif

if &diff
  silent! colorscheme jellyx
  let g:airline_theme = 'papercolor'
elseif has('gui_running')
  silent! colorscheme Tomorrow-Night-Eighties
  let g:airline_theme = 'tomorrow'
else
  silent! colorscheme desert
  let g:airline_theme = 'onedark'
endif

set background=dark

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" incsearch.vim config
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" :h g:incsearch#auto_nohlsearch
set hlsearch
let g:incsearch#auto_nohlsearch = 1
map /  <Plug>(incsearch-forward)
map ?  <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)
map n  <Plug>(incsearch-nohl-n)
map N  <Plug>(incsearch-nohl-N)
map *  <Plug>(incsearch-nohl-*)
map #  <Plug>(incsearch-nohl-#)
map g* <Plug>(incsearch-nohl-g*)
map g# <Plug>(incsearch-nohl-g#)
