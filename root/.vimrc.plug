" vi: ft=vim
call plug#begin('~/.vim/plugged')

let g:tern_map_keys=1
let g:tern_map_prefix='<space>'
let g:tern_request_timeout = 2
let g:tern_show_argument_hints="on_move"

Plug 'tpope/vim-fugitive'

Plug 'mattn/webapi-vim' " Required by gist-vim
Plug 'mattn/gist-vim'

" Make sure you use single quotes
Plug 'junegunn/fzf', { 'dir': $HOME . '/.fzf', 'do': 'yes \| ./install --all' }
Plug 'junegunn/fzf.vim'
Plug 'junegunn/vim-peekaboo'

Plug 'pbogut/fzf-mru.vim'

" Syntax highlighting
let g:jsx_ext_required = 1
Plug 'sheerun/vim-polyglot'

let g:rooter_use_lcd = 1
" Next line prevents vim-rooter from echoing whenever it changes directory.
let g:rooter_silent_chdir = 1

Plug 'airblade/vim-rooter'

Plug 'ap/vim-css-color'

" TPope stuff
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-rbenv'
Plug 'tpope/vim-speeddating'
Plug 'tpope/vim-surround'

" Assorted
Plug 'christoomey/vim-tmux-navigator'
Plug 'easymotion/vim-easymotion'
Plug 'haya14busa/incsearch.vim'
Plug 'Kuniwak/vint'
Plug 'mattn/emmet-vim'
Plug 'moll/vim-node'
Plug 'othree/html5.vim'

Plug 'scrooloose/nerdcommenter'

" Colorschemes
Plug 'jacoborus/tender.vim'
Plug 'rakr/vim-one'
" Plug 'flazz/vim-colorschemes'
let g:gruvbox_contrast_light="hard"
Plug 'morhetz/gruvbox'

Plug 'vim-airline/vim-airline'

Plug 'ternjs/tern_for_vim', { 'do': 'npm install', 'for': ['javascript', 'javascript.jsx'] }

if has('python3')
  Plug 'ludovicchabant/vim-gutentags'
end

Plug 'sheerun/vim-polyglot'
Plug 'ekalinin/Dockerfile.vim'
Plug 'mxw/vim-jsx'

" Test framework for vimscripts. See https://github.com/junegunn/vader.vim
Plug 'junegunn/vader.vim'

let g:ale_enabled = 1
let g:ale_set_quickfix = 1
let g:ale_lint_delay = 200
let g:ale_lint_on_enter = 0
map <Leader>ad <Plug>(ale_detail)

if v:version >= 800
  Plug 'roxma/vim-hug-neovim-rpc'
  Plug 'roxma/nvim-completion-manager'
  Plug 'w0rp/ale'
endif

" neovim specific
if has('nvim')
  Plug 'w0rp/ale'
  

  set completeopt=longest,menuone,preview

  Plug 'roxma/nvim-completion-manager'
  Plug 'roxma/nvim-cm-tern',  {'do': 'npm install'}
  Plug 'roxma/ncm-flow'
  Plug 'roxma/ncm-github'

  " There used to be tons of deoplete, tern, and supertab stuff here! Check the
  " git history for more info!
endif
call plug#end()

set nocompatible

let g:CommandTFileScanner = 'git'

let g:EasyClipShareYanks = 1
map <Space> <Plug>(easymotion-prefix)

let g:user_emmet_mode='inv'
let g:user_emmet_install_global = 0
let g:user_emmet_leader_key='<C-p>'

" Macro manager
let g:marvim_find_key = '<leader>m'
let g:marvim_find_key = '<leader>M'

autocmd FileType html,css,javascript.jsx,typescript.tsx EmmetInstall
autocmd FileType html,css,eruby EmmetInstall

" All the NERDTree stuff used to be here on opening when vim just opens a
" folder. Check the git history for more info!

function! s:fzf_statusline()
  " Override statusline as you like
  highlight fzf1 ctermfg=161 ctermbg=251
  highlight fzf2 ctermfg=23 ctermbg=251
  highlight fzf3 ctermfg=237 ctermbg=251
  setlocal statusline=%#fzf1#\ >\ %#fzf2#fz%#fzf3#f
endfunction

autocmd! User FzfStatusLine call <SID>fzf_statusline()
