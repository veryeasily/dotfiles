##############################################################################
# Initialization
##############################################################################
#
# Make sure we are using sane colors
# set -g default-terminal "screen-256color"

# Free the original C-b of its binding and set C-j to be the leader key.
unbind-key C-b

set-option -g default-shell /usr/local/bin/zsh
# set-window-option -g utf8
set-option -g prefix C-a

set-option -g set-clipboard off

# start window index of 1
set-option -g base-index 1

# don't rename windows automatically
set-option -g allow-rename off

# set-option -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

set -g default-terminal "screen-256color"

################################################################################
# Set default session name
################################################################################

# See https://bit.ly/tmuxconditionalcommands
if-shell -b '[ "$(tmux display-message -p "#S")" = 0 ]' " \
    rename-session 'etc'"

# Lowers the delay time between the prefix key and other keys - fixes pausing in vim
set-option -sg escape-time 1

# Set an ultra-long history of 10000 lines
set-option -g history-limit 20000

# Make tmux check the status bar much more often
set-option -g status-interval 1

# Allow C-a and j to send C-j to application. We want to make it easy as
# possible to keep the a's flowing.
bind-key   C-a      send-prefix

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# setw -g aggressive-resize on
# Because tmuxinator [told us to](https://github.com/tmuxinator/tmuxinator)
set-window-option -g pane-base-index 1

# This is for vim-tmux-clipboard. See
# [here](https://github.com/roxma/vim-tmux-clipboard)
set -g focus-events on

# When in Copy mode, act like vim
set-window-option -g mode-keys vi

# bind-key -T vi-copy-mode 'v' begin-selection
bind-key -Tcopy-mode-vi 'v' send -X begin-selection

# # Set window notifications
set-window-option -g monitor-activity on
set-option        -g visual-activity  on

##############################################################################
# Keybindings
##############################################################################
#
bind-key -r    h    select-pane -L
bind-key -r    j    select-pane -D
bind-key -r    k    select-pane -U
bind-key -r    l    select-pane -R

bind-key -r    <    swap-window -t :-
bind-key -r    >    swap-window -t :+

bind-key     C-f    command-prompt "select-window -t '%%'"

bind-key       u    rotate-window -U

# Next line already exists, just adding it in to clarify the "N" binding. @elju
bind-key       n    command-prompt 'rename-session %%'
bind-key       N    command-prompt 'rename-session %%'

bind-key       x    kill-pane
bind-key       X    confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"\$(tmux display-message -p \"#S\")\"'"

bind-key       \    split-window -h -c '#{pane_current_path}'
bind-key       ]    split-window -h -p 33 -c '#{pane_current_path}'  # Split panes horizontal
bind-key      '"'   split-window -v -c '#{pane_current_path}'  # Split panes horizontal
bind-key       _    split-window -v -p 25 -c '#{pane_current_path}'

bind-key       c    new-window -c "#{pane_current_path}"

bind-key       |    command-prompt 'join-pane -t %%'

bind-key -r  C-p    next-window
bind-key -r  C-n    previous-window

bind-key -Troot M-n copy-mode
bind-key -Troot M-m copy-mode \; command-prompt -p "(search up)" "send -X search-backward \"%%%\""

bind-key       r    source-file ~/.tmux.conf \; display-message " ‚ú± ~/.tmux.conf is re-sourced!!"

# Inline vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# See https://github.com/junegunn/fzf/wiki/Examples-(tmux)#select-pane
bind-key 0 run "tmux split-window -p 40 'env NO_NVM=true bash -ci ftpane'"

# The next line throws an error if no session is running, so we start one here
# if necessary
# new-session -s cutelilcomputer -A

#
# @elju remove temporarily 09/262017
#
# # Copy mode keybindings
# unbind         p
# bind-key       p    paste-buffer

# I don't understand why this line is here so I'm removing it
# @elju 09/26/2017
# # I am not sure what this one does, but I am getting supersticious about it.
# # bind-key     Escape copy-mode -u

# Tmux by default has 'v' go into rectangle select in copy-mode-vi. This gives
# us a more sane selection.
# bind-key    -T copy-mode-vi 'v' send -X begin-selection
#
# Windows copy and paste will work much differently, so need to take this stuff
# out...
# @elju 09/26/2017
bind-key    -T copy-mode-vi   ? command-prompt -p "(search down)" "send -X search-forward \"%%%\""
bind-key    -T copy-mode-vi   / command-prompt -p "(search up)" "send -X search-backward \"%%%\""

# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

##############################################################################
# Statusbar
##############################################################################
#
# Default statusbar colors
# set-option -g status-bg colour254
# set-option -g status-fg colour160

# Borrowed from
# [here](https://github.com/mikeys/dotfiles/blob/af2fa31e5d6b74be1577fa0b0cecb43187303f58/tmux.conf#L151)

# set-option -g status-right-length 60
# set-option -g status-left-length 60

##############################################################################
# Messages
##############################################################################
#
# starts windows at 1 not 0
set-option -g base-index 1

set-window-option -g mouse on

# highlight active window
# set-window-option -g window-status-current-bg colour166
# set-window-option -g window-status-current-fg colour15
# set-window-option -g window-status-current-style fg=blue
# set-window-option -g window-status-current-attr bold

# NEEDED FOR i3 navigation!
# See this source
# https://github.com/pbogut/dotfiles/blob/318143d36e58947719df75a7e3ddc2edf6a3cd29/tmux.conf
set -g set-titles on
set -g set-titles-string '#{pane_current_command} tmux #{session_id}:#{window_index}:#{pane_index}'

# set-window-option -g window-status-format ' #I #W '
# set-window-option -g window-status-attr bold

## pane border and colors
# set-option -g pane-active-border-style "fg=colour154,bold,bright"
# set-option -g pane-border-style        "fg=white"

set-option -g display-time 1000
set-option -g message-style 'bg=colour226,fg=colour16'

###########################################################
# Tmux plugin manager
###########################################################
#
# List of plugins

#set-window-option -g status-style "bg=blue,fg=colour0"
#set-window-option -g window-status-style fg=colour0
#set-window-option -g window-status-activity-style "bg=colour15,fg=colour14,bold"
#set-window-option -g window-status-current-style "bg=colour12,bold"
set -g @open-S 'https://www.google.com/search?q='

# # List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# # set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-logging'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# # set -g @plugin 'seebi/tmux-colors-solarized'
set -g @plugin 'odedlaz/tmux-onedark-theme'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '/Users/hi/.tmux/plugins/tpm/tpm'
# run '/Users/hi/.tmux/plugins/tmux-logging/logging.tmux'

# setw -g window-status-style "fg=colour4,bg=colour0,bold"
# setw -g window-status-current-style "fg=colour13"
# setw -g window-status-format "#{?window_zoomed_flag,#[fg=colour9]#[bg=colour1],} #I:#W#{?window_flags,#{window_flags}, } "
# setw -g window-status-current-format "#{?window_zoomed_flag,#[bg=colour7],} #I:#W#{?window_flags,#{window_flags}, } "
# setw -g window-status-separator ""
# setw -g window-status-current-format "#{?window_zoomed_flag,#[fg=colour18]#[bold]#[bg=colour2],#[fg=colour233]#[bold]#[bg=colour147]} #I #{?window_zoomed_flag,#[fg=colour16]#[bold]#[bg=colour10] #W *zoom* ,#[fg=colour233]#[bg=colour74] #W }"

# set-option -g status-left '[#S] '
# # set-option -g status-left '‚£ø #[bold]#[fg=red]‚ùñ #(tools identifier)#[fg=colour8] üíéüíéüíé #S#[default] ‚°á'
# # set-option -g status-right '#[bold]#(whoami) ‚óè #H#[default] %Y-%m-%d %H:%M ‚°á #(~/battery Discharging)'
# set-option -g status-right '#{?client_prefix,#[fg=colour11]#[bg=colour0]^A ,} "#{=21:pane_title}" %H:%M %d-%b-%y'
# set-window-option -g pane-border-style "fg=colour8"
# set-window-option -g pane-active-border-style "fg=colour15"
