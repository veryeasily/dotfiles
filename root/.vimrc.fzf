" File specifically for integration between VIM and FZF

" Borrowed from
" [here](https://medium.com/@crashybang/supercharge-vim-with-fzf-and-ripgrep-d4661fc853d2)
" --column: Show column number
" --line-number: Show line number
" --no-heading: Do not show file headings in results
" --fixed-strings: Search term as a literal string
" --ignore-case: Case insensitive search
" --hidden: Search hidden files and folders
" --follow: Follow symlinks
" --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
" --color: Search color options
command! -bang -nargs=* Find call fzf#vim#grep('rg --column --line-number --no-heading --fixed-strings --ignore-case --no-ignore --hidden --follow --glob "!.git/*" --color "always" '.shellescape(<q-args>), 1, <bang>0)

command! -bar -bang MapsAll call fzf#vim#maps("", <bang>0)

command! -bang -nargs=* FZFSplit
  \ call fzf#run({
  \   'source': "rg --files --hidden --follow --glob '!.git/*' ./",
  \   'sink': "split"
  \ })

command! -bang -nargs=* FZFVSplit
  \ call fzf#run({
  \   'source': "rg --files --hidden --follow --glob '!.git/*' ./",
  \   'sink': "vsplit"
  \ })

nnoremap <silent> <Leader>C :call fzf#run({
      \   'source':
      \     map(split(globpath(&rtp, "colors/*.vim"), "\n"),
      \         "substitute(fnamemodify(v:val, ':t'), '\\..\\{-}$', '', '')"),
      \   'sink':    'colo',
      \   'options': '+m',
      \   'left':    30
      \ })<CR>

" function! s:find_root()
"   for vcs in ['.git', '.svn', '.hg']
"     let dir = FindRootDirectory()
"     if !empty(dir)
"       execute 'FZF' dir
"       return
"     endif
"   endfor
"   FZF
" endfunction
" command! FZFR call s:find_root()

function! s:grep_find_root()
  for vcs in ['.git', '.svn', '.hg']
    let dir = FindRootDirectory()
    if !empty(dir)
      call fzf#vim#grep('rg --column --line-number --no-heading --fixed-strings --ignore-case --hidden --follow --glob "!.git/*" --color "always" "" '. dir, 1)
      return
    endif
  endfor
  FZF
endfunction
command! FZFG call s:grep_find_root()

noremap <leader>g <Esc>:<c-u>Find<cr>
noremap <leader>l <Esc>:<c-u>Lines<cr>
noremap <leader>t <Esc>:<c-u>FZFVSplit<cr>
noremap <leader>T <Esc>:<c-u>FZFSplit<cr>
noremap <leader>u <Esc>:<c-u>FZFMru<cr>
