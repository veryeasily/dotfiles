" File specifically for integration between VIM and FZF

" Borrowed from
" [here](https://medium.com/@crashybang/supercharge-vim-with-fzf-and-ripgrep-d4661fc853d2)
" --column: Show column number
" --line-number: Show line number
" --no-heading: Do not show file headings in results
" --fixed-strings: Search term as a literal string
" --ignore-case: Case insensitive search
" --hidden: Search hidden files and folders
" --follow: Follow symlinks
" --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
" --color: Search color options
command! -bang -nargs=* Find call fzf#vim#grep('rg --column --line-number --no-heading --fixed-strings --ignore-case --hidden --follow --glob "!.git/*" --color "always" '.shellescape(<q-args>), 1, <bang>0)

command! -bar -bang MapsAll call fzf#vim#maps("", <bang>0)

command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --column --line-number --no-heading --color=always '.shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview('up:60%')
  \           : fzf#vim#with_preview('right:50%:hidden', '?'),
  \   <bang>0)

nnoremap <silent> <Leader>C :call fzf#run({
      \   'source':
      \     map(split(globpath(&rtp, "colors/*.vim"), "\n"),
      \         "substitute(fnamemodify(v:val, ':t'), '\\..\\{-}$', '', '')"),
      \   'sink':    'colo',
      \   'options': '+m',
      \   'left':    30
      \ })<CR>

command! FZFMru call fzf#run({
\  'source':  v:oldfiles,
\  'sink':    'e',
\  'options': '-m -x +s',
\  'down':    '40%'})

noremap <leader>g <Esc>:<c-u>Rg<space>
noremap <leader>l <Esc>:<c-u>Lines<cr>
noremap <leader>o <Esc>:<c-u>History<CR>
noremap <leader>b <Esc>:<c-u>Buffer<CR>
noremap <leader>u <Esc>:<c-u>FZFMru<CR>
noremap <leader>t <Esc>:<c-u>FZF<CR>
noremap <Leader>q <Esc>:History:<CR>
noremap <Leader>/ <Esc>:History/<CR>

" function! FzyCommand(choice_command, vim_command)
"   try
"     let output = system(a:choice_command . " | fzy ")
"   catch /Vim:Interrupt/
"     " Swallow errors from ^C, allow redraw! below
"   endtry
"   redraw!
"   if v:shell_error == 0 && !empty(output)
"     exec a:vim_command . ' ' . output
"   endif
" endfunction

" nnoremap <leader>t :call FzyCommand("fd --no-ignore-vcs --type file --hidden", ":e")<cr>
" nnoremap <leader>v :call FzyCommand("fd --no-ignore-vcs --type file --hidden", ":vs")<cr>
" nnoremap <leader>x :call FzyCommand("fd --no-ignore-vcs --type file --hidden", ":sp")<cr>
